@model DynaDevAPI.Models.DatHangRequest
@{
    ViewData["Title"] = "Thanh toán";
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<h2>Thanh toán</h2>

<form id="checkout-form">
    <input hidden id="MaKH" value="@ViewBag.MaKH">
    <div>
        <label>Tên khách hàng:</label>
        <input type="text" id="TenKH" required>
    </div>
    <div>
        <label>Số điện thoại:</label>
        <input type="text" id="SoDienThoai" required>
    </div>
    <div>
        <label>Địa chỉ nhận hàng:</label>
        <textarea id="DiaChiNhanHang" required></textarea>
    </div>
    <div>
        <label>Mã voucher (tùy chọn):</label>
        <input type="text" id="MaVoucher" placeholder="Nhập mã voucher nếu có">
    </div>
    <div>
        <label>Phương thức thanh toán:</label>
        <select id="PaymentMethod" name="PaymentMethod">
            <option value="COD">Thanh toán khi nhận hàng (COD)</option>
            <option value="VnPay">Thanh toán qua VNPAY</option>
        </select>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Sản phẩm</th>
                <th>Số lượng</th>
                <th>Đơn giá</th>
                <th>Thành tiền</th>
            </tr>
        </thead>
        <tbody id="checkout-items"></tbody>
    </table>
    <div>
        <strong>Tổng tiền: </strong><span id="checkout-total"></span> đ
    </div>
    <div>
        <strong>Tổng tiền sau giảm: </strong><span id="checkout-total-after-discount"></span> đ
    </div>
    <button type="submit" class="btn btn-primary">Xác nhận thanh toán</button>
</form>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let cart = JSON.parse(localStorage.getItem("cart")) || [];
        let tableBody = document.getElementById("checkout-items");
        let totalPrice = 0;

        cart.forEach(item => {
            let row = `<tr>
                               <td>${item.TenSanPham}</td>
                               <td>${item.SoLuong}</td>
                               <td>${item.Gia.toLocaleString()} đ</td>
                               <td>${(item.SoLuong * item.Gia).toLocaleString()} đ</td>
                           </tr>`;
            tableBody.innerHTML += row;
            totalPrice += item.SoLuong * item.Gia;
        });

        document.getElementById("checkout-total").textContent = totalPrice.toLocaleString();
        const maVoucherInput = document.getElementById("MaVoucher");
        maVoucherInput.addEventListener("input", function () {
            const maVoucher = this.value.trim();
            if (maVoucher) {
                // Gọi API để kiểm tra và tính toán giảm giá
                fetch(`/Checkout/CheckVoucher?maVoucher=${encodeURIComponent(maVoucher)}&tongTien=${totalPrice}`, {
                    method: "GET",
                    headers: {
                        "Content-Type": "application/json"
                    }
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            const tongTienSauGiam = data.tongTienSauGiam;
                            const giamGia = data.giamGia;
                            document.getElementById("checkout-total-after-discount").textContent = tongTienSauGiam.toLocaleString();
                            Swal.fire({
                                icon: "success",
                                title: "Thành công",
                                text: `Áp dụng mã voucher thành công! Bạn được giảm: ${giamGia.toLocaleString()} VNĐ`
                            });
                        } else {
                            document.getElementById("checkout-total-after-discount").textContent = "0";
                            Swal.fire({
                                icon: "error",
                                title: "Lỗi",
                                text: data.message
                            });
                        }
                    })
                    .catch(error => {
                        console.error("Lỗi chi tiết:", error);
                        document.getElementById("checkout-total-after-discount").textContent = "0";
                        Swal.fire("Lỗi", "Không thể kiểm tra mã voucher, vui lòng thử lại!", "error");
                    });
            } else {
                // Nếu xóa mã voucher, reset về tổng tiền ban đầu
                document.getElementById("checkout-total-after-discount").textContent = "0";
            }
        });
        document.getElementById("checkout-form").addEventListener("submit", function (event) {
            event.preventDefault();

            let maKH = document.getElementById("MaKH").value;
            if (!maKH) {
                Swal.fire("Lỗi", "Bạn cần đăng nhập trước khi thanh toán!", "error");
                window.location.href = "/TaiKhoan/DangNhap";
                return;
            }

            let orderData = {
                MaKH: maKH,
                TenKH: document.getElementById("TenKH").value,
                SoDienThoai: document.getElementById("SoDienThoai").value,
                DiaChiNhanHang: document.getElementById("DiaChiNhanHang").value,
                PaymentMethod: document.getElementById("PaymentMethod").value,
                CartItems: JSON.parse(localStorage.getItem("cart")),
                MaVoucher: document.getElementById("MaVoucher").value
            };

            fetch("/Checkout/DatHang", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(orderData)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log("Phản hồi từ Controller:", data);
                    if (data.success) {
                        if (data.redirectUrl) { // Điều chỉnh để khớp với cấu trúc phản hồi
                            localStorage.removeItem("cart");
                            window.location.href = data.redirectUrl;
                        } else {
                            Swal.fire("Lỗi", "Không nhận được URL chuyển hướng!", "error");
                        }
                    } else {
                        Swal.fire("Lỗi", data.message, "error");
                    }
                })
                .catch(error => {
                    console.error("Lỗi chi tiết:", error);
                    Swal.fire("Lỗi", "Không thể kết nối đến máy chủ, vui lòng thử lại!", "error");
                });
        });
    });
</script>


<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f7fc;
        margin: 0;
        padding: 0;
    }

    h2 {
        text-align: center;
        color: #333;
        font-size: 30px;
        margin-top: 30px;
    }

    h3 {
        color: #333;
        font-size: 24px;
        margin-top: 20px;
    }

    form {
        width: 70%;
        max-width: 800px;
        margin: 0 auto;
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    div {
        margin-bottom: 15px;
    }

    label {
        font-size: 16px;
        color: #333;
        display: block;
        margin-bottom: 5px;
    }

    input, textarea, select {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 16px;
        margin-top: 5px;
        box-sizing: border-box;
    }

    textarea {
        height: 120px;
    }

    select {
        padding: 8px;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

        .table th, .table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .table th {
            background-color: #f7f7f7;
        }

        .table td {
            font-size: 16px;
        }

    .btn {
        display: block;
        width: 100%;
        padding: 12px;
        background-color: #4CAF50;
        color: white;
        font-size: 18px;
        text-align: center;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        margin-top: 20px;
        transition: background-color 0.3s;
    }

        .btn:hover {
            background-color: #45a049;
        }

    .checkout-total {
        font-size: 18px;
        font-weight: bold;
        margin-top: 20px;
        text-align: right;
    }

        .checkout-total span {
            color: #e74c3c;
            font-size: 20px;
        }

</style>

