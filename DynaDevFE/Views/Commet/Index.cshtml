@model List<DynaDevFE.Models.DanhGiaViewModel>
@using System.Text.Json;
@using DynaDevFE.Models
@using static DynaDevFE.Controllers.CommetController

@{
    ViewData["Title"] = "Quản lý bình luận";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<head>
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <!-- SweetAlert2 JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<h2>Quản lý bình luận</h2>

<div class="mb-3">
    <input id="searchCommet" class="form-control" type="text" placeholder="Tìm kiếm bình luận" />
</div>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Mã đánh giá</th>
            <th>Mã khách hàng</th>
            <th>Mã sản phẩm</th>
            <th>Bình luận</th>
            <th>Điểm đánh giá</th>
            <th>Trạng Thái</th>
            <th>Ngày đánh giá</th>
        </tr>
    </thead>
    <tbody id="commetTable">
        @if (Model != null && Model.Any())
        {
            foreach (var kh in Model)
            {
                <tr>
                    <td>@kh.MaDanhGia</td>
                    <td>@kh.MaKH</td>
                    <td>@kh.MaSP</td>
                    <td>@kh.BinhLuan</td>
                    <td>@kh.DiemDanhGia</td>
                    <td>@kh.TrangThai</td>
                    <td>@kh.NgayDanhGia.ToString("dd/MM/yyyy")</td>

                    <td>
                        <button class="btn btn-success btn-sm btn-approve" data-id="@kh.MaDanhGia">Duyệt</button>
                        <button class="btn btn-danger btn-sm btn-delete" data-id="@kh.MaDanhGia">Xóa</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6" class="text-center">Không có bình luận nào để hiển thị.</td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination">
    @if (ViewBag.Pagination != null)
    {
        var pagination = (Pagination)ViewBag.Pagination;
        for (int i = 1; i <= pagination.TotalPages; i++)
        {
            <a href="#"
               data-page="@i"
               class="btn @(pagination.CurrentPage == i ? "btn-primary" : "btn-secondary") btn-sm">
                @i
            </a>
        }
    }
</div>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.getElementById('searchCommet');
        const commetTable = document.getElementById('commetTable');

        // Hàm tìm kiếm bình luận
        searchInput.addEventListener('input', async function () {
            const query = searchInput.value.trim();

            if (query.length === 0) {
                location.reload(); // Tải lại danh sách gốc nếu không nhập gì
                return;
            }

            try {
                const response = await axios.get(`/Commet/Search?query=${encodeURIComponent(query)}`);
                const comments = response.data;
                renderComments(comments);
            } catch (error) {
                console.error('Lỗi tìm kiếm:', error);
                commetTable.innerHTML = '<tr><td colspan="6" class="text-center">Lỗi khi tìm kiếm bình luận.</td></tr>';
            }
        });

        // Hàm render danh sách bình luận
        function renderComments(comments) {
            commetTable.innerHTML = '';

            if (comments.length > 0) {
                comments.forEach(comment => {
                    // Format the date
                    const date = new Date(comment.ngayDanhGia);
                    const formattedDate = date.toLocaleDateString('vi-VN'); // Format as "Ngày tháng năm" in Vietnamese

                    const row = `
                    <tr>
                        <td>${comment.maDanhGia}</td>
                        <td>${comment.maKH}</td>
                        <td>${comment.maSP}</td>
                        <td>${comment.binhLuan}</td>
                        <td>${comment.diemDanhGia}</td>
                            <td>${comment.trangThai}</td>
                        <td>${formattedDate}</td>  <!-- Use formatted date here -->
                        <td>
                            <button class="btn btn-success btn-sm btn-approve" data-id="${comment.maDanhGia}">Duyệt</button>
                            <button class="btn btn-danger btn-sm btn-delete" data-id="${comment.maDanhGia}">Xóa</button>
                        </td>
                    </tr>`;
                    commetTable.innerHTML += row;
                });

                // Gắn lại sự kiện xóa sau khi cập nhật danh sách
                bindDeleteButtons();
            } else {
                commetTable.innerHTML = '<tr><td colspan="6" class="text-center">Không tìm thấy bình luận.</td></tr>';
            }
        }




        // Xóa bình luận
        function bindDeleteButtons() {
            const deleteButtons = document.querySelectorAll('.btn-delete');
            deleteButtons.forEach(button => {
                button.addEventListener('click', async function () {
                    const commentId = this.getAttribute('data-id');

                    // Show confirmation dialog
                    const result = await Swal.fire({
                        title: 'Bạn có chắc chắn muốn xóa?',
                        text: "Hành động này không thể hoàn tác!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Xóa',
                        cancelButtonText: 'Hủy'
                    });

                    if (result.isConfirmed) {
                        // Perform the delete operation after confirmation
                        try {
                            const response = await axios.delete(`https://localhost:7101/api/Commet/${commentId}`);

                            if (response.data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Đã xóa!',
                                    text: response.data.message,
                                    showConfirmButton: false,
                                    timer: 2000
                                });
                                // Reload the comment list
                                location.reload();
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Lỗi!',
                                    text: response.data.message,
                                    showConfirmButton: true
                                });
                            }
                        } catch (error) {
                            console.error('Lỗi xóa bình luận:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi!',
                                text: 'Đã xảy ra lỗi khi xóa bình luận.',
                                showConfirmButton: true
                            });
                        }
                    } else {
                        // If the user cancels, log the action
                        console.log("Xóa bình luận bị hủy.");
                    }
                });
            });
        }




        // Gắn sự kiện khi tải trang lần đầu
        bindDeleteButtons();

        // Duyệt bình luận
        function bindApproveButtons() {
            const approveButtons = document.querySelectorAll('.btn-approve');
            approveButtons.forEach(button => {
                button.addEventListener('click', async function () {
                    const commentId = this.getAttribute('data-id');

                    // Show confirmation dialog
                    const result = await Swal.fire({
                        title: 'Bạn có chắc chắn muốn duyệt bình luận này?',
                        text: "Bình luận này sẽ được duyệt và hiển thị.",
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Duyệt',
                        cancelButtonText: 'Hủy'
                    });

                    if (result.isConfirmed) {
                        // Perform the approve operation after confirmation
                        try {
                            const response = await axios.put(`https://localhost:7101/api/Commet/Approve/${commentId}`);

                            if (response.data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Đã duyệt!',
                                    text: response.data.message,
                                    showConfirmButton: false,
                                    timer: 2000
                                });
                                // Reload the comment list
                                location.reload();
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Lỗi!',
                                    text: response.data.message,
                                    showConfirmButton: true
                                });
                            }
                        } catch (error) {
                            console.error('Lỗi duyệt bình luận:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi!',
                                text: 'Đã xảy ra lỗi khi duyệt bình luận.',
                                showConfirmButton: true
                            });
                        }
                    } else {
                        // If the user cancels, log the action
                        console.log("Duyệt bình luận bị hủy.");
                    }
                });
            });
        }

        // Gắn sự kiện khi tải trang lần đầu
        bindApproveButtons();

    });
</script>
