@model DynaDevFE.Models.SanPhamViewModel

<div class="product-details-container">
    <div class="product-left">
        <img src="@Model.DanhSachAnh.FirstOrDefault()" alt="@Model.TenSanPham" class="product-main-image" id="mainImage" />
        <div class="product-gallery">
            @if (Model.DanhSachAnh != null && Model.DanhSachAnh.Any())
            {
                foreach (var anh in Model.DanhSachAnh)
                {
                    <img src="@anh" alt="@Model.TenSanPham" class="product-gallery-image" onclick="openImageModal('@anh')" />
                }
            }
            else
            {
                <p>Không có hình ảnh cho sản phẩm này.</p>
            }
        </div>
    </div>

    <div id="imageModal" class="image-modal">
        <span class="close" onclick="closeImageModal()">&times;</span>
        <img class="modal-content" id="modalImage">
        <div id="caption"></div>
    </div>


    <div class="product-right">
        <h1 class="product-title">@Model.TenSanPham</h1>

        <div class="product-info-horizontal">
            <div class="info-row">

                <p class="product-author"><strong>Tác giả:</strong> @Model.TacGia</p>

                <p class="product-publisher"><strong>Nhà xuất bản:</strong>@Model.TenNCC</p>
            </div>

            <div class="info-row">
                <p class="product-supplier"><strong>Năm xuất bản:</strong> @Model.NamXuatBan</p>
                <p class="product-age"><strong>Số lượng còn lại:</strong>@Model.SoLuongTrongKho</p>
            </div>

        </div>

        <!-- Giá sản phẩm -->
        <p class="product-price">
            <span class="current-price">@String.Format("{0:N0} VND", @Model.Gia)</span>
            <span class="original-price">159,000 VND</span>
            <span class="discount">-50%</span>
        </p>

        <!-- Tình trạng -->
        <p class="product-stock"><strong>Tình trạng:</strong> @Model.TinhTrang</p>
        <p class="product-sold"><strong>Đã bán:</strong> 204</p>

        <!-- Nút hành động -->
        <div class="product-actions">
            <button class="btn add-to-cart" onclick="addToCart()">Thêm vào giỏ hàng</button>
            <button class="btn buy-now">Mua ngay</button>
        </div>

        <!-- Ưu đãi liên quan -->
        <div class="related-offers">
            <p class="offer">Mã giảm 20k - sách mới</p>
            <p class="offer">Mã giảm phí vận chuyển</p>
            <p class="offer">Tặng voucher bộ truyện</p>
        </div>

        <!-- Số lượng -->
        <div class="product-quantity">
            <label for="quantity">Số lượng:</label>
            <input type="number" id="quantity" min="1" value="1" />
        </div>
        <!-- Mô tả sản phẩm -->
        <div class="product-description">
            <h4>Mô tả sản phẩm</h4>
            <p>@Model.MoTa</p>
        </div>

    </div>
</div>


@{
    var approvedReviews = Model.DanhGiaSanPham.Where(d => d.TrangThai == "Đã Duyệt").ToList();
    var totalPoints = approvedReviews.Sum(d => d.DiemDanhGia);
    var averageRating = approvedReviews.Count > 0 ? (double)totalPoints / approvedReviews.Count : 0;
}

<div id="review-section">
    <h3>Đánh giá sản phẩm</h3>
    <h4>
        Điểm trung bình @averageRating.ToString("F1") ⭐
    </h4>

    @if (approvedReviews.Any())
    {
        <div id="reviews-list">
            @foreach (var danhGia in approvedReviews)
            {
                <div class="review">
                    <strong style="font-weight: bold;">@danhGia.Email</strong> <br />
                    <strong>Đánh giá:</strong> @danhGia.DiemDanhGia ⭐ <br />
                    <strong>Bình luận:</strong> @danhGia.BinhLuan <br />
                    <small>@danhGia.NgayDanhGia.ToString("dd/MM/yyyy")</small>
                </div>
            }
        </div>
    }
    else
    {
        <p id="no-reviews">Chưa có đánh giá nào.</p>
    }

    <!-- Form thêm đánh giá -->
    <h3>Thêm đánh giá</h3>
    <form id="formDanhGia">
        <input type="hidden" id="MaSP" value="@Model.MaSP" />
        <label>Điểm số (1-5):</label>
        <select id="DiemDanhGia" required>
            <option value="" disabled selected>Chọn điểm đánh giá</option>
            <option value="1">1 - ⭐</option>
            <option value="2">2 - ⭐⭐</option>
            <option value="3">3 - ⭐⭐⭐</option>
            <option value="4">4 - ⭐⭐⭐⭐</option>
            <option value="5">5 - ⭐⭐⭐⭐⭐</option>
        </select>

        <label>Bình luận:</label>
        <textarea id="BinhLuan" required></textarea>
        <button type="submit">Gửi đánh giá</button>
    </form>
</div>


<script>
    async function getUserInfo() {
        try {
            let response = await fetch("https://localhost:7101/api/Authentication", {
                method: "GET",
                headers: { "Accept": "application/json" },
                credentials: "include"
            });

            let userData = await response.json();
            return userData.success ? userData.maKH : null;
        } catch (error) {
            console.error("Lỗi lấy MaKH:", error);
            return null;
        }
    }

    document.getElementById("formDanhGia").addEventListener("submit", async function (e) {
        e.preventDefault();

        let maKH = await getUserInfo();
        if (!maKH) {
            alert("Bạn chưa đăng nhập.");
            return;
        }

        let danhGia = {
            MaSP: document.getElementById("MaSP").value,
            MaKH: maKH,
            DiemDanhGia: parseInt(document.getElementById("DiemDanhGia").value),
            BinhLuan: document.getElementById("BinhLuan").value
        };

        await fetch("https://localhost:7101/api/ProductDetails/AddReview", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(danhGia)
        });

        alert("Đánh giá của bạn đã được ghi lại và chờ duyệt, sẽ sớm được hiển thị!");
        location.reload();
    });

</script>






<script>
    // Hàm mở modal khi click vào ảnh
    function openImageModal(imageSrc) {
        var modal = document.getElementById("imageModal");
        var modalImage = document.getElementById("modalImage");

        modal.style.display = "block";
        modalImage.src = imageSrc;
        caption.innerHTML = imageSrc;
    }

    // Hàm đóng modal
    function closeImageModal() {
        var modal = document.getElementById("imageModal");
        modal.style.display = "none";
    }
    // Định nghĩa addToCart trong phạm vi toàn cục (global scope)
    function addToCart() {
        const maxQuantity = @Model.SoLuongTrongKho;
        const inputQuantity = parseInt(document.getElementById("quantity").value);
        if (inputQuantity > maxQuantity) {
            alert("Số lượng bạn chọn vượt quá số lượng trong kho! Vui lòng chọn ít hơn.");
            return;
        }
        const product = {
            MaSP: "@Model.MaSP",
            TenSanPham: `@Html.Raw(Model.TenSanPham)`,
            Anh: "@Model.DanhSachAnh.FirstOrDefault()",
            Gia: @Model.Gia,
            SoLuong: inputQuantity
        };

        let cart = JSON.parse(localStorage.getItem("cart")) || [];
        let existingItem = cart.find(item => item.MaSP === product.MaSP);

        if (existingItem) {
            let newTotal = existingItem.SoLuong + inputQuantity;
            if (newTotal > maxQuantity) {
                alert("Tổng số lượng trong giỏ hàng vượt quá số lượng trong kho!");
                return;
            }
            existingItem.SoLuong = newTotal;
        } else {
            cart.push(product);
        }

        localStorage.setItem("cart", JSON.stringify(cart));
        syncCartToServer(cart);
        alert("Sản phẩm đã được thêm vào giỏ hàng!");
    }

    // Hàm đồng bộ giỏ hàng lên API
    function syncCartToServer(cart) {
        fetch("https://localhost:7101/api/cart", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(cart)
        })
            .then(response => response.json())
            .then(data => console.log("Đã đồng bộ giỏ hàng:", data))
            .catch(err => console.error("Lỗi đồng bộ giỏ hàng:", err));
    }

    // Khi tải trang, tải giỏ hàng từ server về localStorage
    function loadCartFromServer() {
        fetch("http://localhost:7101/api/cart")
            .then(response => response.json())
            .then(cart => {
                if (cart && cart.length > 0) {
                    console.log("Dữ liệu giỏ hàng từ server:", cart);
                    localStorage.setItem("cart", JSON.stringify(cart)); // Chỉ đồng bộ nếu có dữ liệu
                }
            })
            .catch(err => console.error("Lỗi tải giỏ hàng:", err));
    }

    window.onload = function () {
        let cart = JSON.parse(localStorage.getItem("cart"));
        if (!cart || cart.length === 0) {
            loadCartFromServer();
        }
    };
</script>


<style>
    #review-section {
        width: 55%;
        margin-top: 20px;
        margin-left: 140px;
        padding: 15px;
        border: 1px solid #ccc; /* Viền cho phần đánh giá */
        border-radius: 8px; /* Bo tròn viền */
        background-color: #fff; /* Màu nền trắng */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Đổ bóng nhẹ */
    }

        #review-section h3 {
            margin-bottom: 15px;
            font-size: 1.5em;
            color: #333;
        }

    /* Điều chỉnh cho danh sách bình luận */
    #reviews-list {
        margin-bottom: 15px;
        max-height: 380px; /* Điều chỉnh chiều cao cho danh sách bình luận */
        width: 100%; /* Làm rộng danh sách đánh giá */
        overflow-y: auto;
        border: 1px solid #ddd;
        border-radius: 5px;
        background-color: #f9f9f9;
        padding: 10px;
    }

    .review {
        padding: 10px;
        border-bottom: 1px solid #eee;
        color: #555;
    }

        .review:last-child {
            border-bottom: none;
        }

    #no-reviews {
        color: #999;
        text-align: center;
        font-style: italic;
    }

    /* Điều chỉnh cho form đánh giá */
    #formDanhGia label {
        font-weight: bold;
        margin-top: 10px;
        display: block;
    }

    #formDanhGia select, #formDanhGia textarea {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 0.9em; /* Giảm kích thước chữ */
        margin-bottom: 10px;
    }

    #formDanhGia textarea {
        height: 80px; /* Giới hạn chiều cao của ô nhập bình luận */
    }

    #formDanhGia button {
        padding: 10px 15px;
        border: none;
        border-radius: 4px;
        background-color: #ff9800;
        color: white;
        cursor: pointer;
        font-size: 1em;
    }

        #formDanhGia button:hover {
            background-color: #e68900;
        }
</style>





<style>

    .product-details-container {
        display: flex;
        gap: 30px;
        padding: 20px;
        max-width: 1200px;
        margin: auto;
        font-family: Arial, sans-serif;
    }

    .product-left {
        flex: 1;
    }

    .product-main-image {
        width: 100%;
        max-width: 400px; /* Set max width to avoid image getting too large */
        max-height: 500px; /* Optional: set a max height to maintain aspect ratio */
        object-fit: contain; /* Ensure image doesn't stretch or distort */
        border-radius: 8px;
        box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);
    }

    .product-gallery {
        display: flex;
        gap: 10px;
        margin-top: 10px;
    }

    .product-gallery-image {
        width: 60px;
        height: 60px;
        border-radius: 5px;
        object-fit: cover;
        border: 1px solid #ddd;
        cursor: pointer;
        transition: transform 0.3s ease;
    }

        .product-gallery-image:hover {
            transform: scale(1.1);
        }

    .product-right {
        flex: 2;
    }

    .product-title {
        font-size: 22px !important;
        font-weight: bold !important;
        line-height: 1.2;
        color: #333;
    }

    .product-author,
    .product-publisher,
    .product-age,
    .product-stock,
    .product-sold {
        font-size: 16px;
        margin-bottom: 8px;
    }

    .flash-sale {
        display: inline-block;
        background-color: #ff4c4c;
        color: white;
        font-size: 14px;
        font-weight: bold;
        padding: 5px 15px;
        border-radius: 5px;
        margin-bottom: 15px;
    }

    .flash-sale-timer {
        margin-left: 10px;
        background-color: white;
        color: #ff4c4c;
        padding: 2px 8px;
        border-radius: 5px;
    }

    .product-price {
        font-size: 24px;
        color: #e74c3c;
        margin: 10px 0;
    }

    .current-price {
        font-weight: bold;
    }

    .original-price {
        text-decoration: line-through;
        color: #999;
        margin-left: 10px;
    }

    .discount {
        background-color: #ffcccc;
        color: #e74c3c;
        padding: 2px 6px;
        margin-left: 10px;
        border-radius: 3px;
    }

    .product-actions {
        display: flex;
        gap: 10px;
        margin: 20px 0;
    }

    .btn {
        padding: 10px 20px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        font-size: 16px;
        text-transform: uppercase;
        transition: background-color 0.3s ease;
    }

    .add-to-cart {
        background-color: #ff9800;
        color: white;
    }

        .add-to-cart:hover {
            background-color: #e67e00;
        }

    .buy-now {
        background-color: #e74c3c;
        color: white;
    }

        .buy-now:hover {
            background-color: #c0392b;
        }

    .shipping-info {
        margin-top: 20px;
        padding: 10px;
        background-color: #f9f9f9;
        border-radius: 5px;
    }

        .shipping-info p {
            margin: 5px 0;
        }

    .related-offers {
        margin-top: 20px;
    }

        .related-offers .offer {
            background-color: #f3f3f3;
            border: 1px solid #ddd;
            padding: 5px 10px;
            border-radius: 3px;
            margin-bottom: 5px;
            display: inline-block;
        }

    .product-quantity {
        margin-top: 20px;
    }

        .product-quantity input {
            width: 50px;
            text-align: center;
            border: 1px solid #ddd;
            border-radius: 3px;
            padding: 5px;
        }

    .product-info-horizontal {
        display: flex;
        flex-direction: column; /* Hiển thị các dòng theo chiều dọc */
        gap: 5px; /* Giảm khoảng cách giữa các dòng */
    }

    .info-row {
        display: grid;
        grid-template-columns: 1fr 1fr; /* Chia đều 2 cột */
        align-items: center; /* Căn giữa dọc */
        gap: 10px; /* Khoảng cách giữa các cột */
    }

        /* Căn chỉnh các mục trong dòng */
        .info-row p {
            font-size: 16px; /* Đồng nhất kích thước chữ */
            margin: 0; /* Loại bỏ margin mặc định */
            color: #333; /* Màu chữ */
            line-height: 1.5; /* Căn đều dòng chữ */
            white-space: nowrap; /* Ngăn chữ bị xuống dòng */
        }

        .info-row strong {
            font-weight: bold; /* Làm đậm tiêu đề */
        }


    .image-modal {
        display: none;
        position: fixed;
        z-index: 1;
        padding-top: 100px;
        left: 0;
        top: 0;
        width: 100%;
        max-width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.9);
    }

    /* Image inside the modal */
    .modal-content {
        margin: auto;
        display: block;
        max-width: 90%; /* Set max width to 90% of screen */
        max-height: 80%; /* Set max height to 80% of screen */
        width: auto; /* Allow width to scale according to the height */
        height: auto; /* Allow height to scale according to the width */
    }


    /* Close button */
    .close {
        color: #fff;
        font-size: 30px;
        font-weight: bold;
        position: absolute;
        top: 20px;
        right: 45px;
        transition: 0.3s;
    }

        .close:hover,
        .close:focus {
            color: #bbb;
            text-decoration: none;
            cursor: pointer;
        }

    .product-description {
        margin-top: 20px;
        padding: 15px;
        background: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

        .product-description h2 {
            font-size: 1.5rem;
            color: #333;
            margin-bottom: 10px;
        }

        .product-description p {
            font-size: 1rem;
            line-height: 1.6;
            color: #666;
            text-align: justify;
        }

</style>
